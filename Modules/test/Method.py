def printSubmitSrc(outputfile, cfgName, source1, source2, destination, pwd):
    outputfile.write("#!/bin/bash\n")
    outputfile.write("cd " + pwd + "\n")
    outputfile.write("export SCRAM_ARCH=slc5_amd64_gcc462\n")
    outputfile.write("eval `scramv1 runtime -sh`\n")
    outputfile.write("echo 'cmsRun " + cfgName + "'\n")
    outputfile.write("cmsRun " + cfgName + "\n")
    outputfile.write("echo 'cmsStage -f " + source1 + " " + destination + "'\n")
    outputfile.write("cmsStage -f " + source1 + " " + destination + "\n")
    outputfile.write("echo 'rm -f " + source1 + "'\n")
    outputfile.write("rm -f " + source1 + "\n")

def printFillCfg( outputfile, njob, outdir, nInter, cuts4s9, OnlyES_E):
    outputfile.write("import FWCore.ParameterSet.Config as cms\n")
    outputfile.write("\n")
    outputfile.write("isGun = True \n")
    outputfile.write("\n")
    outputfile.write("if isGun:\n")
    outputfile.write("   correctHits = False\n")
    outputfile.write("   useHLTFilter = False\n")
    outputfile.write("   process = cms.Process('PI0DUMPERGUN')\n")
    outputfile.write("else:\n")
    outputfile.write("   correctHits = True\n")
    outputfile.write("   useHLTFilter = True\n")
    outputfile.write("   process = cms.Process('PI0DUMPER')\n")
    outputfile.write("\n")
    outputfile.write("if correctHits:\n")
    outputfile.write("    print 'CORRECTING HITS'\n")
    outputfile.write("    \n")
    outputfile.write("if useHLTFilter:\n")
    outputfile.write("    print 'FILTERING PI0 EVENTS'\n")
    outputfile.write("\n")
    outputfile.write("if useHLTFilter:\n")
    outputfile.write("    import copy\n")
    outputfile.write("    from HLTrigger.HLTfilters.hltHighLevel_cfi import *\n")
    outputfile.write("    process.AlcaP0Filter = copy.deepcopy(hltHighLevel)\n")
    outputfile.write("    process.AlcaP0Filter.throw = cms.bool(False)\n")
    outputfile.write("    process.AlcaP0Filter.HLTPaths = ['AlCa_EcalPi0_*']\n")
    outputfile.write("\n")
    outputfile.write("import RecoLocalCalo.EcalRecProducers.ecalRecalibRecHit_cfi\n")
    outputfile.write("\n")
    outputfile.write("from Geometry.CaloEventSetup.CaloTopology_cfi import *\n")
    outputfile.write("process.load('Configuration.StandardSequences.Services_cff')\n")
    outputfile.write("process.load('SimGeneral.HepPDTESSource.pythiapdt_cfi')\n")
    outputfile.write("process.load('FWCore.MessageService.MessageLogger_cfi')\n")
    outputfile.write("#process.load('Configuration.StandardSequences.MixingNoPileUp_cff')\n")
    outputfile.write("process.load('Configuration.StandardSequences.GeometryDB_cff')\n")
    outputfile.write("process.load('Configuration.StandardSequences.MagneticField_38T_cff')\n")
    outputfile.write("process.load('Geometry.TrackerGeometryBuilder.trackerGeometry_cfi')\n")
    outputfile.write("process.load('RecoTracker.GeometryESProducer.TrackerRecoGeometryESProducer_cfi')\n")
    outputfile.write("process.load('RecoVertex.BeamSpotProducer.BeamSpot_cff')\n")
    outputfile.write("process.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')\n")
    outputfile.write("\n")
    outputfile.write("#load transparency loss\n")
    outputfile.write("process.GlobalTag.globaltag = 'GR_R_53_V15::All'\n")
    outputfile.write("\n")
    outputfile.write("process.options = cms.untracked.PSet( \n")
    outputfile.write("    wantSummary = cms.untracked.bool(False),\n")
    outputfile.write("    SkipEvent   = cms.untracked.vstring('ProductNotFound')\n")
    outputfile.write(") \n")
    outputfile.write("\n")
    outputfile.write("process.MessageLogger.cerr.FwkReport.reportEvery = 100\n")
    outputfile.write("\n")
    outputfile.write("#process.load('L1TriggerConfig.L1GtConfigProducers.L1GtTriggerMenuConfig_cff')\n")
    outputfile.write("#process.load('L1TriggerConfig.L1GtConfigProducers.L1GtStableParametersConfig_cff')\n")
    outputfile.write("if correctHits:\n")
    outputfile.write("    process.ecalPi0ReCorrected =  RecoLocalCalo.EcalRecProducers.ecalRecalibRecHit_cfi.ecalRecHit.clone(\n")
    outputfile.write("        doEnergyScale = cms.bool(False),\n")
    outputfile.write("        doIntercalib = cms.bool(False),\n")
    outputfile.write("        doLaserCorrections = cms.bool(True),\n")
    outputfile.write("        EBRecHitCollection = cms.InputTag('hltAlCaPi0RecHitsFilter','pi0EcalRecHitsEB', 'HLT'),\n")
    outputfile.write("        EERecHitCollection = cms.InputTag('hltAlCaPi0RecHitsFilter','pi0EcalRecHitsEE', 'HLT'),\n")
    outputfile.write("        EBRecalibRecHitCollection = cms.string('pi0EcalRecHitsEB'),\n")
    outputfile.write("        EERecalibRecHitCollection = cms.string('pi0EcalRecHitsEE')\n")
    outputfile.write("    )\n")
    outputfile.write("\n")
    GunName = 'newPi0Dumper_Gun'
    outputfile.write("#NewPi0Dumper_Gun\n")
    outputfile.write("process.load('Analysis.Modules.NewPi0Dumper_Gun_cfi')\n")
    outputfile.write("if isGun:\n")
    outputfile.write("   process." + GunName  + ".OutputFile = cms.untracked.string('/tmp/HTL_Pi0_" + njob  + ".root')\n")
    outputfile.write("   process." + GunName  + ".outfilename_ContCorr = cms.untracked.string('/tmp/HTL_Pi0_" + njob  + ".root')\n")
    outputfile.write("else:   \n")
    outputfile.write("   process." + GunName  + ".OutputFile = cms.untracked.string('/tmp/HTL_Pi0_" + njob  + ".root')\n")
    outputfile.write("process." + GunName  + ".ExternalGeometry = cms.untracked.string('/afs/cern.ch/user/l/lpernie/scratch1/pi0Calib/pi0/CMSSW_4_2_4/src/CalibCode/submit/common/caloGeometry.root')\n")
    outputfile.write("#Cuts for AlcaPi0\n")
    outputfile.write("if isGun:\n")
    outputfile.write("   process." + GunName  + ".StoreMCTruth = cms.untracked.bool(True)\n")
    outputfile.write("else:\n")
    outputfile.write("   process." + GunName  + ".StoreMCTruth = cms.untracked.bool(False)\n")
    outputfile.write("process." + GunName  + ".useES_E_ = cms.untracked.bool(" + OnlyES_E  + ")\n")
    outputfile.write("process." + GunName  + ".ptpi0Cut = 0.7\n")
    outputfile.write("process." + GunName  + ".s1CluCutEE = 0.5\n")
    outputfile.write("process." + GunName  + ".s1CluCut = 0.35\n")
    outputfile.write("process." + GunName  + ".ptCluCut = 0.35\n")
    outputfile.write("process." + GunName  + ".s4s9CluCut = " + cuts4s9 + "\n")
    outputfile.write("process." + GunName  + ".DoOffGeom = cms.untracked.bool(False)\n")
    outputfile.write("process." + GunName  + ".StoreTransparencyCorrection = cms.untracked.bool(True)\n")
    outputfile.write("### choosing proper input tag (recalibration module changes the collection names)\n")
    outputfile.write("if( not(isGun) and correctHits) :\n")
    outputfile.write("    process." + GunName  + ".EBRecHitCollectionTag = cms.untracked.InputTag('ecalPi0ReCorrected','pi0EcalRecHitsEB')\n")
    outputfile.write("    process." + GunName  + ".EERecHitCollectionTag = cms.untracked.InputTag('ecalPi0ReCorrected','pi0EcalRecHitsEE')\n")
    outputfile.write("    process." + GunName  + ".ESRecHitCollectionTag = cms.untracked.InputTag('hltAlCaPi0RecHitsFilter','pi0EcalRecHitsES', 'HLT')\n")
    outputfile.write("if isGun:\n")
    outputfile.write("    process." + GunName  + ".EBRecHitCollectionTag = cms.untracked.InputTag('ecalRecHit','EcalRecHitsEB', 'RECO')\n")
    outputfile.write("    process." + GunName  + ".EERecHitCollectionTag = cms.untracked.InputTag('ecalRecHit','EcalRecHitsEE', 'RECO')\n")
    outputfile.write("    process." + GunName  + ".ESRecHitCollectionTag = cms.untracked.InputTag('ecalPreshowerRecHit','EcalRecHitsES','RECO')\n")
    outputfile.write("process." + GunName  + ".preshRecHitProducer = cms.untracked.InputTag('ecalPreshowerRecHit','EcalRecHitsES')\n")
    outputfile.write("process." + GunName  + ".PFRecHitCollectionTag = cms.untracked.InputTag('particleFlowClusterECAL','','RECO')\n")
    outputfile.write("\n")
    outputfile.write("process.maxEvents = cms.untracked.PSet(\n")
    outputfile.write("    input = cms.untracked.int32(" + nInter + ")\n")
    outputfile.write(")\n")
    outputfile.write("\n")
    outputfile.write("process.p = cms.Path()\n")
    outputfile.write("\n")
    outputfile.write("#use HLT\n")
    outputfile.write("if useHLTFilter:\n")
    outputfile.write("    process.p *= process.AlcaP0Filter\n")
    outputfile.write("\n")
    outputfile.write("if correctHits :\n")
    outputfile.write("    print 'ADDING RECALIB RECHIT MODULE WITH PARAMETERS'\n")
    outputfile.write("    print 'ENERGY SCALE '+str(process.ecalPi0ReCorrected.doEnergyScale)\n")
    outputfile.write("    print 'INTERCALIBRATION '+str(process.ecalPi0ReCorrected.doIntercalib)\n")
    outputfile.write("    print 'LASER '+str(process.ecalPi0ReCorrected.doLaserCorrections)\n")
    outputfile.write("    process.p *= process.ecalPi0ReCorrected\n")
    outputfile.write("\n")
    outputfile.write("#use beam spot\n")
    outputfile.write("if (process." + GunName  + ".useBeamSpotPosition == True):\n")
    outputfile.write("    process.p *= process.offlineBeamSpot\n")
    outputfile.write("\n")
    outputfile.write("#build ntuple\n")
    outputfile.write("process.p *= process." + GunName  + "\n")
    outputfile.write("\n")
    outputfile.write("process.source = cms.Source('PoolSource',\n")
    outputfile.write("    fileNames = cms.untracked.vstring(\n")
